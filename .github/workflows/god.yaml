name: G.O.D
on:
  pull_request:
  push:
    tags:
      - "dev"
      - "staging"
      - "prod"

jobs:
  lint:
    strategy:
      matrix:
        os:
        - "ubuntu-latest"
        python-version:
        - "3.10"

    runs-on: ${{ matrix.os }}

    steps:
    - name: "Checkout Code"
      uses: actions/checkout@v3

    - name: Set up python
      uses: actions/setup-python@v5
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      id: setup-poetry
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Set up cache
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install G.O.D
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

    - name: Ensure the Code Passes Ruff Lint
      run: |
        source $VENV
        ruff check god

  test:
    needs:
      - lint

    strategy:
      matrix:
        os:
        - "ubuntu-latest"
        python-version:
        - "3.10"

    runs-on: ${{ matrix.os }}

    steps:
    - name: "Checkout Code"
      uses: actions/checkout@v3

    - name: Set up python
      uses: actions/setup-python@v5
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      id: setup-poetry
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

#    - name: Set up Docker
#      uses: docker/setup-docker-action@v4

    - name: Set up cache
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install G.O.D
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

    - name: Install DBMate
      run: |
        wget https://github.com/amacneil/dbmate/releases/download/v2.12.0/dbmate-linux-amd64 -O ./dbmate
        chmod +x ./dbmate

    - name: Run unit tests
      run: |
        source $VENV
        PATH=$(pwd):$PATH pytest -vv -xs tests/  # prepend current working dir to $PATH so the tests can find dbmate
